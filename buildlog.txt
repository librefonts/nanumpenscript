# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/nanumpenscript/METADATA.json /home/travis/build/fontdirectory/nanumpenscript/builds/build
$ cp -a /home/travis/build/fontdirectory/nanumpenscript/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/nanumpenscript/builds/build
$ cp -a NanumPenScript-Regular.ttf.ttx src/NanumPen.otf.ttx NanumPenScript-Regular.ttf._m_o_r_x.ttx NanumPenScript-Regular.ttf._c_m_a_p.ttx NanumPenScript-Regular.ttf._h_e_a_d.ttx NanumPenScript-Regular.ttf._f_e_a_t.ttx NanumPenScript-Regular.ttf.G_P_O_S_.ttx NanumPenScript-Regular.ttf._h_h_e_a.ttx NanumPenScript-Regular.ttf._n_a_m_e.ttx NanumPenScript-Regular.ttf.D_S_I_G_.ttx NanumPenScript-Regular.ttf._f_p_g_m.ttx NanumPenScript-Regular.ttf._p_r_o_p.ttx NanumPenScript-Regular.ttf._p_o_s_t.ttx NanumPenScript-Regular.ttf.F_F_T_M_.ttx NanumPenScript-Regular.ttf._c_v_t.ttx NanumPenScript-Regular.ttf.O_S_2f_2.ttx NanumPenScript-Regular.ttf._g_l_y_f.ttx NanumPenScript-Regular.ttf._p_r_e_p.ttx NanumPenScript-Regular.ttf._h_m_t_x.ttx NanumPenScript-Regular.ttf._g_a_s_p.ttx NanumPenScript-Regular.ttf._l_o_c_a.ttx NanumPenScript-Regular.ttf.GlyphOrder.ttx NanumPenScript-Regular.ttf.G_D_E_F_.ttx NanumPenScript-Regular.ttf.G_S_U_B_.ttx NanumPenScript-Regular.ttf._m_a_x_p.ttx src/NanumPen.otf.O_S_2f_2.ttx src/NanumPen.otf._h_e_a_d.ttx src/NanumPen.otf._p_o_s_t.ttx src/NanumPen.otf._v_m_t_x.ttx src/NanumPen.otf._c_m_a_p.ttx src/NanumPen.otf._v_h_e_a.ttx src/NanumPen.otf.C_F_F_.ttx src/NanumPen.otf.GlyphOrder.ttx src/NanumPen.otf._n_a_m_e.ttx src/NanumPen.otf.V_O_R_G_.ttx src/NanumPen.otf._m_a_x_p.ttx src/NanumPen.otf.G_S_U_B_.ttx src/NanumPen.otf.B_A_S_E_.ttx src/NanumPen.otf._h_m_t_x.ttx src/NanumPen.otf.G_P_O_S_.ttx src/NanumPen.otf._h_h_e_a.ttx /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPenScript-Regular.ttf.ttx /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPen.otf.ttx > fontaine.txt
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ fontbakery-check.py upstream-ttx NanumPenScript-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPenScript-Regular.ttf.ttx /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPen-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ fontbakery-check.py upstream-ttx NanumPen.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPen.otf.ttx /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPenScriptOTF-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/nanumpenscript/builds/build /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPen-Regular.ttx /home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPenScriptOTF-Regular.ttx
Compiling "/home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPen-Regular.ttx" to "/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'feat' table...
Parsing 'morx' table...
Parsing 'prop' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/nanumpenscript/builds/build/sources/NanumPenScriptOTF-Regular.ttx" to "/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'BASE' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'VORG' table...
Parsing 'hmtx' table...
Parsing 'vhea' table...
Parsing 'vmtx' table...
### Test NanumPen-Regular.ttf
$ fontbakery-check.py result NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.otf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.otf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.otf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.otf
Parameter              NanumPen-Regular.ttf    NanumPenScriptOTF-Regular.otf    
ymax                   801                     800                              
hhea.ascent            801                     801                              
OS/2.sTypoAscender     801                     801                              
OS/2.usWinAscent       801                     801                              
ymin                   -200                    -200                             
hhea.descent           -200                    -200                             
OS/2.sTypoDescender    -200                    -200                             
OS/2.usWinDescent      200                     200                              
hhea.lineGap           0                       0                                
OS/2.sTypoLineGap      0                       0                                
hhea total             1001                    1001                             
typo total             1001                    1001                             
win total              1001                    1001                             
UPM:Heights            1000:1001               1000:1000                        
UPM:Heights %          100 %                   100 %                            


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
This font contains both a 'mor[tx]' table and a 'GSUB' table.
  FF will only read feature/settings in 'morx' which do not match features
  found in 'GSUB'.
Warning: Mac and Windows entries in the 'name' table differ for the
 Family string in the language Korean
 Mac String: 3a (r)14OU3434 
Windows String:  
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language Korean
 Mac String: 3a (r)14OU3434 
Windows String:  
Warning: Mac and Windows entries in the 'name' table differ for the
 Designer string in the language Korean
 Mac String: uI; AOCuE ; 3eC;
Windows String: ; ; ;
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF NanumPen-Regular.ttf
$ ls -l 'NanumPen-Regular.ttf'* # look at the size savings of that subset process
NanumPen-Regular.ttf.opt: 3559828 bytes
NanumPen-Regular.ttf: 3821516 bytes
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.opt /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
### Autohint TTFs (ttfautohint) NanumPen-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf '/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf: 3559828 bytes
/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.autohint.ttf: 2892224 bytes
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.autohint.ttf /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
### Subset TTFs (pyftsubset) NanumPen-Regular.ttf
$ pyftsubset NanumPen-Regular.latin
$ pyftsubset NanumPen-Regular.menu
spaceWidth is    280
nbspWidth is     280
Nothing to do
strippedname:/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ fontbakery-build-font2ttf.py sources/NanumPenScriptOTF-Regular.otf NanumPenScriptOTF-Regular.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'VORG' vertical origin table
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf)
strippedname:/home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.otf
### Test NanumPenScriptOTF-Regular.ttf
$ fontbakery-check.py result NanumPenScriptOTF-Regular.ttf
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPen-Regular.ttf
Parameter              NanumPenScriptOTF-Regular.ttf    NanumPen-Regular.ttf    
ymax                   800                              801                     
hhea.ascent            801                              801                     
OS/2.sTypoAscender     801                              801                     
OS/2.usWinAscent       801                              801                     
ymin                   -200                             -200                    
hhea.descent           -200                             -200                    
OS/2.sTypoDescender    -200                             -200                    
OS/2.usWinDescent      200                              200                     
hhea.lineGap           0                                0                       
OS/2.sTypoLineGap      0                                0                       
hhea total             1001                             1001                    
typo total             1001                             1001                    
win total              1001                             1001                    
UPM:Heights            1000:1000                        1000:1001               
UPM:Heights %          100 %                            100 %                   


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
$ mv /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf.fix /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/nanumpenscript/builds/build/NanumPenScriptOTF-Regular.ttf
Could not store tests result: None
Process Process-8:
Traceback (most recent call last):
  File "/opt/python/2.7.8/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/opt/python/2.7.8/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_cli/pipe/build.py", line 114, in run_processes
    fontlint.run(filename, pipedata)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_cli/pipe/fontlint.py", line 63, in run
    log=self.bakery.logger)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/__init__.py", line 27, in run_set
    return run_suite(tests_suite)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/base.py", line 246, in run_suite
    runner.run(suite)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/base.py", line 171, in run
    test(result)
  File "/opt/python/2.7.8/lib/python2.7/unittest/suite.py", line 70, in __call__
    return self.run(*args, **kwds)
  File "/opt/python/2.7.8/lib/python2.7/unittest/suite.py", line 108, in run
    test(result)
  File "/opt/python/2.7.8/lib/python2.7/unittest/case.py", line 393, in __call__
    return self.run(*args, **kwds)
  File "/opt/python/2.7.8/lib/python2.7/unittest/case.py", line 333, in run
    result.addFailure(self, sys.exc_info())
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/base.py", line 136, in addFailure
    self.callmethod(test_method.autofix_method, test)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/base.py", line 91, in callmethod
    getattr(mod, methodname.split('.')[-1])(test)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_cli/pipe/autofix.py", line 99, in fix_nbsp
    checkAndFix(targetpath)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_cli/scripts/nbsp.py", line 108, in checkAndFix
    spaceWidth = getWidth(font, space)
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_cli/scripts/nbsp.py", line 82, in getWidth
    return font['hmtx'][glyphname][0]
  File "/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/FontTools/fontTools/ttLib/tables/_h_m_t_x.py", line 98, in __getitem__
    return self.metrics[glyphName]
KeyError: None
No nbsp glyph
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/nanumpenscript/builds/build
{} exists
No Designer Name known, using Multiple Designers for now...
Original size: 5623416\nGzip size: 1561510
Family Name: Nanum Pen
PS Name: NanumPenOTF00
Full Name:
Style: normal
Weight: 400
Filename: NanumPenScriptOTF-Regular.ttf
Copyright:
Family Name: Nanum Pen
PS Name: NanumPen
Full Name: Nanum Pen
Style: normal
Weight: 400
Filename: NanumPen-Regular.ttf
Copyright: Copyright (c) 2010 NHN Corporation. All rights reserved. Font designed by Sandoll Communications Inc.
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_korean(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): FAIL
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): ERROR
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): ERROR
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): ERROR
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): FAIL
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
{
  "name": "Nanum Pen Script", 
  "designer": "Sandoll Communication", 
  "license": "OFL", 
  "visibility": "Sandbox", 
  "category": "Handwriting", 
  "size": 1548776, 
  "fonts": [
    {
      "name": "Nanum Pen", 
      "postScriptName": "NanumPenOTF00", 
      "fullName": "", 
      "style": "normal", 
      "weight": 400, 
      "filename": "NanumPenScriptOTF-Regular.ttf", 
      "copyright": ""
    }, 
    {
      "name": "Nanum Pen", 
      "postScriptName": "NanumPen", 
      "fullName": "Nanum Pen", 
      "style": "normal", 
      "weight": 400, 
      "filename": "NanumPen-Regular.ttf", 
      "copyright": "Copyright (c) 2010 NHN Corporation. All rights reserved. Font designed by Sandoll Communications Inc."
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2012-05-09"
}
